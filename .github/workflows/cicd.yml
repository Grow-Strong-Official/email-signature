name: CICD
on: push
jobs:
  #    ______            __  _
  #   / ____/___  ____  / /_(_)___  __  ______  __  _______
  #  / /   / __ \/ __ \/ __/ / __ \/ / / / __ \/ / / / ___/
  # / /___/ /_/ / / / / /_/ / / / / /_/ / /_/ / /_/ (__  )
  # \____/\____/_/_/_/\__/_/_/ /_/\__,_/\____/\__,_/____/
  #    /  _/___  / /____  ____ __________ _/ /_(_)___  ____
  #    / // __ \/ __/ _ \/ __ `/ ___/ __ `/ __/ / __ \/ __ \
  #  _/ // / / / /_/  __/ /_/ / /  / /_/ / /_/ / /_/ / / / /
  # /___/_/ /_/\__/\___/\__, /_/   \__,_/\__/_/\____/_/ /_/
  #                    /____/

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Check for security issue
        run: npm audit --audit-level=critical #or "high"

  build:
    needs: [security-audit]
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci
      - name: Build the code
        run: npm run build
      - name: Store Artifact
        uses: actions/upload-artifact@v3
        with:
          name: website-build
          path: build

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci
      - name: Test the code
        run: echo Please configure `npm run test` command! #npm run test

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci
      - name: Lint the code
        run: echo Please configure `npm run lint` command! #npm run lint

  static-analysis:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - run: echo Please configure Static Analysis!
      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v1
      #   with:
      #     languages: javascript
      # - name: Perform Analysis
      #   uses: github/codeql-action/analyze@v1

  #    ______            __  _
  #   / ____/___  ____  / /_(_)___  __  ______  __  _______
  #  / /   / __ \/ __ \/ __/ / __ \/ / / / __ \/ / / / ___/
  # / /___/ /_/ / / / / /_/ / / / / /_/ / /_/ / /_/ (__  )
  # \____/\____/_/ /_/\__/_/_/ /_/\__,_/\____/\__,_/____/   __
  #    / __ \___  ____  / /___  __  ______ ___  ___  ____  / /_
  #   / / / / _ \/ __ \/ / __ \/ / / / __ `__ \/ _ \/ __ \/ __/
  #  / /_/ /  __/ /_/ / / /_/ / /_/ / / / / / /  __/ / / / /_
  # /_____/\___/ .___/_/\____/\__, /_/ /_/ /_/\___/_/ /_/\__/
  #           /_/            /____/

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [test, lint, static-analysis]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Tag
        id: autotagger
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Release
        id: create_release
        if: steps.autotagger.outputs.tagname != ''
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.autotagger.outputs.tagname }}
          release_name: Version ${{ steps.autotagger.outputs.version }}
          body: ${{ steps.autotagger.outputs.tagmessage }}
          draft: false
          prerelease: true
      - name: Retrieve Artifact
        uses: actions/download-artifact@v3
        with:
          name: website-build
          path: build
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build
      - name: Smoke Test
        run: |
          curl http://grow-strong-official.github.io/email-signature | grep "Email Signature Builder"
      - name: Rollback Release
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          id: ${{ steps.create_release.id }}
          tag: ${{ steps.autotagger.outputs.tagname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Rebuild Previous Version
        if: failure() && steps.create_release.outputs.id != ''
        run: npm ci && npm run build
      - name: Re-Publish Previous Version
        if: failure() && steps.create_release.outputs.id != ''
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build
